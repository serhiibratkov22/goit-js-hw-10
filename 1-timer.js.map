{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\n  const dateInput = document.getElementById('dateInput');\n  const startButton = document.getElementById('startButton');\n  const daysElement = document.getElementById('days');\n  const hoursElement = document.getElementById('hours');\n  const minutesElement = document.getElementById('minutes');\n  const secondsElement = document.getElementById('seconds');\n\n  let countdownInterval;\n  let targetDate;\n\n  function formatNumber(number) {\n    return number < 10 ? '0' + number : number;\n  }\n\n  function updateCountdown() {\n    const now = new Date().getTime();\n    const distance = targetDate - now;\n\n    if (distance <= 0) {\n      clearInterval(countdownInterval);\n      daysElement.textContent = '00';\n      hoursElement.textContent = '00';\n      minutesElement.textContent = '00';\n      secondsElement.textContent = '00';\n      return;\n    }\n\n    const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n    const hours = Math.floor(\n      (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n    );\n    const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n    const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n    daysElement.textContent = formatNumber(days);\n    hoursElement.textContent = formatNumber(hours);\n    minutesElement.textContent = formatNumber(minutes);\n    secondsElement.textContent = formatNumber(seconds);\n  }\n\n  startButton.addEventListener('click', function () {\n    if (countdownInterval) {\n      clearInterval(countdownInterval);\n    }\n\n    targetDate = new Date(dateInput.value).getTime();\n\n    if (isNaN(targetDate) || targetDate <= Date.now()) {\n      alert('Please choose a valid future date.');\n      return;\n    }\n\n    updateCountdown();\n    countdownInterval = setInterval(updateCountdown, 1000);\n  });\n});\n"],"names":["dateInput","startButton","daysElement","hoursElement","minutesElement","secondsElement","countdownInterval","targetDate","formatNumber","number","updateCountdown","now","distance","days","hours","minutes","seconds"],"mappings":"wFAAA,SAAS,iBAAiB,mBAAoB,UAAY,CACxD,MAAMA,EAAY,SAAS,eAAe,WAAW,EAC/CC,EAAc,SAAS,eAAe,aAAa,EACnDC,EAAc,SAAS,eAAe,MAAM,EAC5CC,EAAe,SAAS,eAAe,OAAO,EAC9CC,EAAiB,SAAS,eAAe,SAAS,EAClDC,EAAiB,SAAS,eAAe,SAAS,EAExD,IAAIC,EACAC,EAEJ,SAASC,EAAaC,EAAQ,CAC5B,OAAOA,EAAS,GAAK,IAAMA,EAASA,CACrC,CAED,SAASC,GAAkB,CACzB,MAAMC,EAAM,IAAI,KAAM,EAAC,QAAO,EACxBC,EAAWL,EAAaI,EAE9B,GAAIC,GAAY,EAAG,CACjB,cAAcN,CAAiB,EAC/BJ,EAAY,YAAc,KAC1BC,EAAa,YAAc,KAC3BC,EAAe,YAAc,KAC7BC,EAAe,YAAc,KAC7B,MACD,CAED,MAAMQ,EAAO,KAAK,MAAMD,GAAY,IAAO,GAAK,GAAK,GAAG,EAClDE,EAAQ,KAAK,MAChBF,GAAY,IAAO,GAAK,GAAK,KAAQ,IAAO,GAAK,GACxD,EACUG,EAAU,KAAK,MAAOH,GAAY,IAAO,GAAK,KAAQ,IAAO,GAAG,EAChEI,EAAU,KAAK,MAAOJ,GAAY,IAAO,IAAO,GAAI,EAE1DV,EAAY,YAAcM,EAAaK,CAAI,EAC3CV,EAAa,YAAcK,EAAaM,CAAK,EAC7CV,EAAe,YAAcI,EAAaO,CAAO,EACjDV,EAAe,YAAcG,EAAaQ,CAAO,CAClD,CAEDf,EAAY,iBAAiB,QAAS,UAAY,CAOhD,GANIK,GACF,cAAcA,CAAiB,EAGjCC,EAAa,IAAI,KAAKP,EAAU,KAAK,EAAE,QAAO,EAE1C,MAAMO,CAAU,GAAKA,GAAc,KAAK,IAAG,EAAI,CACjD,MAAM,oCAAoC,EAC1C,MACD,CAEDG,IACAJ,EAAoB,YAAYI,EAAiB,GAAI,CACzD,CAAG,CACH,CAAC"}