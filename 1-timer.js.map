{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const dateInput = document.getElementById('datetime-picker');\n  const startButton = document.querySelector('[data-start]');\n  const daysElement = document.querySelector('[data-days]');\n  const hoursElement = document.querySelector('[data-hours]');\n  const minutesElement = document.querySelector('[data-minutes]');\n  const secondsElement = document.querySelector('[data-seconds]');\n\n  let countdownInterval;\n  let targetDate;\n\n  // Ініціалізація flatpickr\n  flatpickr(dateInput, {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n      targetDate = selectedDates[0];\n      if (targetDate <= new Date()) {\n        alert('Please choose a date in the future');\n        startButton.disabled = true;\n      } else {\n        startButton.disabled = false;\n      }\n    },\n  });\n\n  function formatNumber(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  function updateCountdown() {\n    const now = new Date().getTime();\n    const distance = targetDate - now;\n\n    if (distance <= 0) {\n      clearInterval(countdownInterval);\n      daysElement.textContent = '00';\n      hoursElement.textContent = '00';\n      minutesElement.textContent = '00';\n      secondsElement.textContent = '00';\n      return;\n    }\n\n    const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n    const hours = Math.floor(\n      (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n    );\n    const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n    const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n    daysElement.textContent = formatNumber(days);\n    hoursElement.textContent = formatNumber(hours);\n    minutesElement.textContent = formatNumber(minutes);\n    secondsElement.textContent = formatNumber(seconds);\n  }\n\n  startButton.addEventListener('click', () => {\n    if (!targetDate) {\n      alert('Please select a date first.');\n      return;\n    }\n\n    if (countdownInterval) {\n      clearInterval(countdownInterval);\n    }\n\n    updateCountdown();\n    countdownInterval = setInterval(updateCountdown, 1000);\n  });\n});\n"],"names":["dateInput","startButton","daysElement","hoursElement","minutesElement","secondsElement","countdownInterval","targetDate","flatpickr","selectedDates","formatNumber","value","updateCountdown","now","distance","days","hours","minutes","seconds"],"mappings":"wIAGA,SAAS,iBAAiB,mBAAoB,UAAY,CACxD,MAAMA,EAAY,SAAS,eAAe,iBAAiB,EACrDC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAE9D,IAAIC,EACAC,EAGJC,EAAUR,EAAW,CACnB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQS,EAAe,CACrBF,EAAaE,EAAc,CAAC,EACxBF,GAAc,IAAI,MACpB,MAAM,oCAAoC,EAC1CN,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACL,CAAG,EAED,SAASS,EAAaC,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACrC,CAED,SAASC,GAAkB,CACzB,MAAMC,EAAM,IAAI,KAAM,EAAC,QAAO,EACxBC,EAAWP,EAAaM,EAE9B,GAAIC,GAAY,EAAG,CACjB,cAAcR,CAAiB,EAC/BJ,EAAY,YAAc,KAC1BC,EAAa,YAAc,KAC3BC,EAAe,YAAc,KAC7BC,EAAe,YAAc,KAC7B,MACD,CAED,MAAMU,EAAO,KAAK,MAAMD,GAAY,IAAO,GAAK,GAAK,GAAG,EAClDE,EAAQ,KAAK,MAChBF,GAAY,IAAO,GAAK,GAAK,KAAQ,IAAO,GAAK,GACxD,EACUG,EAAU,KAAK,MAAOH,GAAY,IAAO,GAAK,KAAQ,IAAO,GAAG,EAChEI,EAAU,KAAK,MAAOJ,GAAY,IAAO,IAAO,GAAI,EAE1DZ,EAAY,YAAcQ,EAAaK,CAAI,EAC3CZ,EAAa,YAAcO,EAAaM,CAAK,EAC7CZ,EAAe,YAAcM,EAAaO,CAAO,EACjDZ,EAAe,YAAcK,EAAaQ,CAAO,CAClD,CAEDjB,EAAY,iBAAiB,QAAS,IAAM,CAC1C,GAAI,CAACM,EAAY,CACf,MAAM,6BAA6B,EACnC,MACD,CAEGD,GACF,cAAcA,CAAiB,EAGjCM,IACAN,EAAoB,YAAYM,EAAiB,GAAI,CACzD,CAAG,CACH,CAAC"}